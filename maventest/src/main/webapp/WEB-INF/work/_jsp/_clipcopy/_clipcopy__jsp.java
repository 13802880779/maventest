/*
 * JSP generated by Resin Professional 4.0.48 (built Wed, 17 Feb 2016 11:03:24 PST)
 */

package _jsp._clipcopy;
import javax.servlet.*;
import javax.servlet.jsp.*;
import javax.servlet.http.*;

public class _clipcopy__jsp extends com.caucho.jsp.JavaPage
{
  private static final java.util.HashMap<String,java.lang.reflect.Method> _jsp_functionMap = new java.util.HashMap<String,java.lang.reflect.Method>();
  private boolean _caucho_isDead;
  private boolean _caucho_isNotModified;
  private com.caucho.jsp.PageManager _jsp_pageManager;
  
  public void
  _jspService(javax.servlet.http.HttpServletRequest request,
              javax.servlet.http.HttpServletResponse response)
    throws java.io.IOException, javax.servlet.ServletException
  {
    com.caucho.server.webapp.WebApp _jsp_application = _caucho_getApplication();
    com.caucho.jsp.PageContextImpl pageContext = _jsp_pageManager.allocatePageContext(this, _jsp_application, request, response, null, null, 8192, true, false);

    TagState _jsp_state = null;

    try {
      _jspService(request, response, pageContext, _jsp_application, _jsp_state);
    } catch (java.lang.Throwable _jsp_e) {
      pageContext.handlePageException(_jsp_e);
    } finally {
      _jsp_pageManager.freePageContext(pageContext);
    }
  }
  
  private void
  _jspService(javax.servlet.http.HttpServletRequest request,
              javax.servlet.http.HttpServletResponse response,
              com.caucho.jsp.PageContextImpl pageContext,
              javax.servlet.ServletContext application,
              TagState _jsp_state)
    throws Throwable
  {
    javax.servlet.jsp.JspWriter out = pageContext.getOut();
    final javax.el.ELContext _jsp_env = pageContext.getELContext();
    javax.servlet.ServletConfig config = getServletConfig();
    javax.servlet.Servlet page = this;
    javax.servlet.jsp.tagext.JspTag _jsp_parent_tag = null;
    com.caucho.jsp.PageContextImpl _jsp_parentContext = pageContext;
    response.setContentType("text/html;charset=utf-8");

    out.write(_jsp_string0, 0, _jsp_string0.length);
  }

  private com.caucho.make.DependencyContainer _caucho_depends
    = new com.caucho.make.DependencyContainer();

  public java.util.ArrayList<com.caucho.vfs.Dependency> _caucho_getDependList()
  {
    return _caucho_depends.getDependencies();
  }

  public void _caucho_addDepend(com.caucho.vfs.PersistentDependency depend)
  {
    super._caucho_addDepend(depend);
    _caucho_depends.add(depend);
  }

  protected void _caucho_setNeverModified(boolean isNotModified)
  {
    _caucho_isNotModified = true;
  }

  public boolean _caucho_isModified()
  {
    if (_caucho_isDead)
      return true;

    if (_caucho_isNotModified)
      return false;

    if (com.caucho.server.util.CauchoSystem.getVersionId() != -8002497470487589159L)
      return true;

    return _caucho_depends.isModified();
  }

  public long _caucho_lastModified()
  {
    return 0;
  }

  public void destroy()
  {
      _caucho_isDead = true;
      super.destroy();
    TagState tagState;
  }

  public void init(com.caucho.vfs.Path appDir)
    throws javax.servlet.ServletException
  {
    com.caucho.vfs.Path resinHome = com.caucho.server.util.CauchoSystem.getResinHome();
    com.caucho.vfs.MergePath mergePath = new com.caucho.vfs.MergePath();
    mergePath.addMergePath(appDir);
    mergePath.addMergePath(resinHome);
    com.caucho.loader.DynamicClassLoader loader;
    loader = (com.caucho.loader.DynamicClassLoader) getClass().getClassLoader();
    String resourcePath = loader.getResourcePathSpecificFirst();
    mergePath.addClassPath(resourcePath);
    com.caucho.vfs.Depend depend;
    depend = new com.caucho.vfs.Depend(appDir.lookup("clipcopy/clipcopy.jsp"), 1571404344779033971L, false);
    _caucho_depends.add(depend);
    loader.addDependency(depend);
  }

  final static class TagState {

    void release()
    {
    }
  }

  public java.util.HashMap<String,java.lang.reflect.Method> _caucho_getFunctionMap()
  {
    return _jsp_functionMap;
  }

  public void caucho_init(ServletConfig config)
  {
    try {
      com.caucho.server.webapp.WebApp webApp
        = (com.caucho.server.webapp.WebApp) config.getServletContext();
      init(config);
      if (com.caucho.jsp.JspManager.getCheckInterval() >= 0)
        _caucho_depends.setCheckInterval(com.caucho.jsp.JspManager.getCheckInterval());
      _jsp_pageManager = webApp.getJspApplicationContext().getPageManager();
      com.caucho.jsp.TaglibManager manager = webApp.getJspApplicationContext().getTaglibManager();
      com.caucho.jsp.PageContextImpl pageContext = new com.caucho.jsp.InitPageContextImpl(webApp, this);
    } catch (Exception e) {
      throw com.caucho.config.ConfigException.create(e);
    }
  }

  private final static char []_jsp_string0;
  static {
    _jsp_string0 = "<!DOCTYPE html>\r\n\r\n<html>\r\n<head></head>\r\n<body>\r\n<input type=\"text\" value=\"text\" id=\"copy_txt\"/><a href=\"javascirpt:;\" id=\"copy_btn\">\ufffd\ufffd\ufffd</a>\r\n<script language=\"JavaScript\">\r\n    ZeroClipboard.setMoviePath( 'ZeroClipboard.swf' );  //\ufffd\ufffdtml\ufffd\ufffd\ufffd\u036c\u04bb\u013f\u00bc\ufffd\ufffd\ufffdsetMoviePath\r\n    ZeroClipboard.setMoviePath( 'ZeroClipboard10.swf' );\r\n    var clip = new ZeroClipboard.Client();   //\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdero Clipboard\ufffd\ufffd\ufffd   clip.setText( '' ); // will be set later on mouseDown   //\ufffd\ufffd\u057c\ufffd\ufffd    clip.setHandCursor( true );      //\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\r\n    clip.setCSSEffects( true );          //\ufffd\ufffdcss\r\n    clip.addEventListener( 'complete', function(client, text) {     //\ufffd\ufffd\ufffd\ufffd\ufffd\u027a\ufffd\ufffd\ufffd\ufffd\ufffd         alert(\"aa\")      \r\n          clip.hide();                                          // \ufffd\ufffd\ufffd\u04bb\ufffd\u03ba\ufffdide()\u02b9\ufffd\ufffd\ufffd\ufffd\ufffd\u0165\u02a7\u0427\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd    } );\r\n   clip.addEventListener( 'mouseDown', function(client) {\r\n          clip.setText( document.getElementById('copy_txt').value );\r\n    } );\r\n    clip.glue( 'copy_btn' );\r\n</script>\r\n<input type=\"text\" value=\"text\" id=\"copy_txt0\"/><a href=\"javascirpt:;\" id=\"copy_btn0\" data='0' class=\"copyBtn\">\ufffd\ufffd\ufffd</a>\r\n<input type=\"text\" value=\"text\" id=\"copy_txt1\"/><a href=\"javascirpt:;\" id=\"copy_btn1\" data='1' class=\"copyBtn\">\ufffd\ufffd\ufffd</a>\r\n<input type=\"text\" value=\"text\" id=\"copy_txt2\"/><a href=\"javascirpt:;\" id=\"copy_btn2\" data='2' class=\"copyBtn\">\ufffd\ufffd\ufffd</a>\r\n<script language=\"JavaScript\">\r\n$(\".copyBtn\").each(function(i){\r\n        var id = $(this).attr('data');\r\n        var clip=null;\r\n        clip = new ZeroClipboard.Client();\r\n        ZeroClipboard.setMoviePath( 'ZeroClipboard.swf' );  //\ufffd\ufffdtml\ufffd\ufffd\ufffd\u036c\u04bb\u013f\u00bc\ufffd\ufffd\ufffdsetMoviePath\r\n        ZeroClipboard.setMoviePath( 'ZeroClipboard10.swf' );\r\n        clip.setHandCursor( true );\r\n        clip.setText( $(\"#copy_txt\"+id).val() );\r\n        clip.addEventListener('complete', function (client, text) {\r\n          alert( \"\ufffd\ufffd\u03f2\ufffd\ufffd\ufffd\ufffd\u0279\ufffd\" );\r\n        });\r\n        clip.glue( 'copy_btn'+id);\r\n  });\r\n</script>\r\n</body>\r\n</html>\r\n".toCharArray();
  }
}
